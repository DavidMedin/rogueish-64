quit
ptype boi
quit
type
apropos type
info types
quit
info types
ptype font
quit
r
quit
b TEST_write
r
print entity_list
set print array on
print entity_list
print (void*[])entity_list
print (int*[])entity_list
print (int)entity_list
print *(int*)entity_list
help x/
x/d entity_list
x/d (qword)entity_list
x/dg entity_list
x/dg (int)entity_list
repl
epl
rep
apropos asm
apropos repl
compile print "entity_list"
inspect entity_list
inspect (int)entity_list
x/dg entity_list
x/dg (int)entity_list
x/dg (int*)entity_list
x/dg (char)entity_list
x/dg (int)ent_list_end
s
s
apropos reverse
rsi
rsi
quit
r
quit]
quit
b TEST_write
r
b +1
c
x/dg ent_list_end
x/dg (int)ent_list_end
b +1
c
x/dg $rax
x/dg $rax.font
s
x/dg hero_data
x/dg (int)hero_data
x/dg (int)ent_list_end
s
x/dg (int)ent_list_end
x/dg (int*)ent_list_end
x/dg (int**)ent_list_end
x/dg *(int**)ent_list_end
help x
x/a ent_list_end
x/a (int)ent_list_end
print ent_list_end
print int ent_list_end
print (int)ent_list_end
help all x
help all
dashboard
s
x/a (int)ent_list_end
help dashboard
help dashboard source
dashboard
dashboard source scroll 4
advance 180
dashboard
advance +1
advance
dashboard
advance 0x00000000004039de
advance rogue.asm:180
dashboard
advance +2
quit
b TEST_write
r
advance rogue.asm:180
quit
advance 180
advance +180
r
quit
b TEST_write
advance 180
r
advance 180
advance +1
dashboard
advance +1
dash
dash src scroll 4
dash source scroll 4
n
n
n
n
n
n
n
x ent_list_end
x (int)ent_list_end
x $rax
info $rax
info rax
info register $rax
x/a $rax
x/a $rbx
n
x/a rax
x/a $rax
x/a $rbx
x addr
x $rbx
x (int)ent_list_end
x (int)entity_list
ptype boi
r
ptype boi
ptype font
ptype malloc
ptype main
ptype DrawEntities
ptype move_char_fail_msg
ptype $boi
ptype $test_struct
ptype $game_buffer
print $game_buffer
print game_buffer
print entity_list
print entity_list
quit
b DrawEntities.top_loop
r
dash source -style height 20
x/a rbx
x/a $rbx
x/a entity_list
x/a (int)entity_list
x/a ent_list_end
x/a (int)ent_list_end
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
x/a $rbx
quit
b while_end.w_not_shifting
b while_top.w_not_shifting
r
n
n
n
r
quit
b while_top.w_test
r
n
n
n
help n'
s
s
r
s
s
help c
c
r
step
help step
help si
r
si
si
si
si
si
si
si
si
si
si
help x
x/d $rax
print $rax
si
quit
r
quit
quit
r
quit
r
quit
r
quit
b strcpy
r
quit
r
x/a $rax
quit
quit
r
 print entity_list
x/a entity_list
x/a (int)entity_list
print (int)entity_list
x/a (int)(entity_list+0x8)
x/a (int)((char*)entity_list+0x8)
x/a (int)(ent_list_end)
x/a (int*)&entity_list
x/a $rsp
exit
quit
r
x/a $rsp
quit
r
            mov rcx, qword[rax]
x/a $rax
x/a $rsp
quit
